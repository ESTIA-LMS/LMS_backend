USE Master
GO

--Create the database
IF NOT EXISTS(SELECT * FROM sys.databases WHERE name = 'BASKOI_LMS')
	BEGIN
		CREATE DATABASE BASKOI_LMS;
	END
GO

USE BASKOI_LMS
GO

--Create all Tables
BEGIN TRY

	BEGIN TRANSACTION
		
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Profils'))
			BEGIN
				--Create table of Profils
				CREATE TABLE dbo.Profils
				(
					Profils_Id INT IDENTITY(1,1) NOT NULL, 	--AutoIncrément
					Profils_Nom NVARCHAR(50),
					Profils_Description NVARCHAR(255),
					PRIMARY KEY (Profils_Id)				--Primary Key (unique)
				);
				
				--Insert into table 'Profils' some default record
				INSERT INTO dbo.Profils
				(Profils_Nom, Profils_Description)
				VALUES
				('Admin','Administrateur avec pouvoir');
				
				INSERT INTO dbo.Profils
				(Profils_Nom, Profils_Description)
				VALUES
				('Teacher','Utilisateur avec pouvoir');
				
				INSERT INTO dbo.Profils
				(Profils_Nom, Profils_Description)
				VALUES
				('Student','Utilisateur sans pouvoir');
			END
		
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Users'))
			BEGIN
				--Create table of Users
				CREATE TABLE dbo.Users
				(
					Users_Id INT IDENTITY(1,1) NOT NULL,	--AutoIncrément
					Users_Profils_Id INT NOT NULL,			
					Users_Nom NVARCHAR(100),
					Users_Prenom NVARCHAR(100),
					Users_Email NVARCHAR(255),
					Users_Pwd NVARCHAR(500),					--Special type for 'password'
					Users_Create_Date DATETIME DEFAULT GETDATE(),
					Users_Update_Date DATETIME DEFAULT GETDATE(),
					Users_Actif BIT,
					PRIMARY KEY (Users_Id),				--Primary Key (unique)
					CONSTRAINT FK_Profils FOREIGN KEY (Users_Profils_Id)	--Foreign key on Users_Profils_Id
					REFERENCES Profils(Profils_Id)							--Link on table Profils
				);
				
				--Insert into table 'Users' some default record
				--Field Users_Pwd is recording with an HASHBYTES in order to "Encrypt" password with SHA2_512 algorythm
				INSERT INTO dbo.Users 
				(Users_Profils_Id, Users_Nom, Users_Prenom, Users_Email, Users_Pwd, Users_Actif)
				VALUES
				(1, 'DOE', 'John', 'john.doe@gmail.com', HASHBYTES('SHA2_512', 'Ckombien'), 1);
			END
		
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Matieres'))
			BEGIN
				--Create table of Matieres
				CREATE TABLE dbo.Matieres
				(
					Matieres_Id INT IDENTITY(1,1) NOT NULL,		--AutoIncrément
					Matieres_Nom NVARCHAR(100),
					Matieres_Description NVARCHAR(255) DEFAULT '',
					Matieres_Create_Date DATETIME DEFAULT GETDATE(),
					Matieres_Update_Date DATETIME DEFAULT GETDATE(),
					Matieres_Actif BIT DEFAULT 1,
					PRIMARY KEY (Matieres_Id)				--Primary Key (unique)
				);
				
				--Insert into table 'Matieres' some default record
				INSERT INTO dbo.Matieres 
				(Matieres_Nom, Matieres_Description)
				VALUES
				('Mathématiques Appliqués', 'Mathématiques Appliqués à l''industrie');
				
				INSERT INTO dbo.Matieres 
				(Matieres_Nom, Matieres_Description)
				VALUES
				('Informatique Industrielle', 'Informatique Industrielle');
				
				INSERT INTO dbo.Matieres 
				(Matieres_Nom, Matieres_Description)
				VALUES
				('Développement Logiciel', 'Développement Logiciel');
				
			END

		IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Cours'))
			BEGIN
				--Create table of Cours
				CREATE TABLE dbo.Cours
				(
					Cours_Id INT IDENTITY(1,1) NOT NULL,		--AutoIncrément
					Cours_Nom NVARCHAR(100),
					Cours_Description NVARCHAR(255) DEFAULT '',
					Cours_Duree TIME DEFAULT '01:00:00',
					Cours_Create_Date DATETIME DEFAULT GETDATE(),
					Cours_Update_Date DATETIME DEFAULT GETDATE(),
					Cours_Actif BIT DEFAULT 1,
					PRIMARY KEY (Cours_Id)				--Primary Key (unique)
				);
				
				--Insert into table 'Cours' some default record
				INSERT INTO dbo.Cours 
				(Cours_Nom, Cours_Description, Cours_Duree)
				VALUES
				('Mathématiques 3ème', 'Mathématiques pour les élève de 3ème',  '02:00:00');
				
				INSERT INTO dbo.Cours 
				(Cours_Nom, Cours_Description, Cours_Duree)
				VALUES
				('Géométrie variable', 'Géométrie variable',  '03:00:00');
				
				INSERT INTO dbo.Cours 
				(Cours_Nom, Cours_Description)
				VALUES
				('C# pour le Nuls', 'Développement en C# pour les débutants');
				
			END
			
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Cours_Matières'))
			BEGIN
				--Create table of Cours_Matières
				CREATE TABLE dbo.Cours_Matières
				(
					CM_Id INT IDENTITY(1,1) NOT NULL,		--AutoIncrément
					CM_Cours_Id INT NOT NULL,
					CM_Matieres_Id INT NOT NULL,
					CM_Description NVARCHAR(255) DEFAULT '' NULL,
					CM_Create_Date DATETIME DEFAULT GETDATE(),
					CM_Update_Date DATETIME DEFAULT GETDATE(),
					PRIMARY KEY (CM_Id),				--Primary Key (unique)
					CONSTRAINT FK_Cours FOREIGN KEY (CM_Cours_Id)		--Foreign key on CM_Cours_Id
					REFERENCES Cours(Cours_Id),							--Link on table Cours
					CONSTRAINT FK_Matieres FOREIGN KEY (CM_Matieres_Id)		--Foreign key on CM_Matieres_Id
					REFERENCES Matieres(Matieres_Id)						--Link on table Matieres
				);
				
				--Insert into table 'Cours_Matières' some default record
				INSERT INTO dbo.Cours_Matières 
				(CM_Cours_Id, CM_Matieres_Id)
				VALUES
				(1, 1);
				
				INSERT INTO dbo.Cours_Matières 
				(CM_Cours_Id, CM_Matieres_Id)
				VALUES
				(2, 1);
				
				INSERT INTO dbo.Cours_Matières 
				(CM_Cours_Id, CM_Matieres_Id)
				VALUES
				(3, 3);
				
				INSERT INTO dbo.Cours_Matières 
				(CM_Cours_Id, CM_Matieres_Id)
				VALUES
				(3, 2);
				
			END	
			
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Type_Eval'))
			BEGIN
				--Create table of Type_Eval
				CREATE TABLE dbo.Type_Eval
				(
					Type_Eval_Id INT IDENTITY(1,1) NOT NULL,		--AutoIncrément
					Type_Eval_Nom NVARCHAR(100),
					Type_Eval_Description NVARCHAR(255) DEFAULT '',
					Type_Eval_Create_Date DATETIME DEFAULT GETDATE(),
					Type_Eval_Update_Date DATETIME DEFAULT GETDATE(),
					PRIMARY KEY (Type_Eval_Id)				--Primary Key (unique)
				);
				
				--Insert into table 'Matieres' some default record
				INSERT INTO dbo.Type_Eval 
				(Type_Eval_Nom, Type_Eval_Description)
				VALUES
				('Evaluation Test', 'Evaluation Test dont les notes ne servent qu''à entrainer');
				
				INSERT INTO dbo.Type_Eval 
				(Type_Eval_Nom, Type_Eval_Description)
				VALUES
				('Evaluation Nationale', 'Evaluation Nationale avec rapport auprès de l''état');
				
			END	
			
		IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Eval'))
			BEGIN
				--Create table of Eval
				CREATE TABLE dbo.Eval
				(
					Eval_Id INT IDENTITY(1,1) NOT NULL,		--AutoIncrément
					Eval_Type_Eval_Id INT NOT NULL,
					Eval_Cours_Id INT NOT NULL,
					Eval_Nom NVARCHAR(100),
					Eval_Date DATETIME DEFAULT GETDATE(),
					Eval_Create_Date DATETIME DEFAULT GETDATE(),
					Eval_Update_Date DATETIME DEFAULT GETDATE(),
					PRIMARY KEY (Eval_Id),				--Primary Key (unique)
					CONSTRAINT FK_Type_Eval FOREIGN KEY (Eval_Type_Eval_Id)		--Foreign key on Eval_Type_Eval_Id
					REFERENCES Type_Eval(Type_Eval_Id),							--Link on table Type_Eval
					CONSTRAINT FK_Eval_Cours FOREIGN KEY (Eval_Cours_Id)		--Foreign key on Eval_Cours_Id
					REFERENCES Cours(Cours_Id)							--Link on table Cours
				);
				
				--Insert into table 'Matieres' some default record
				INSERT INTO dbo.Eval 
				(Eval_Type_Eval_Id, Eval_Cours_Id, Eval_Nom)
				VALUES
				(1, 1, 'Eval test de mathématiques 1er semestre');
				
				INSERT INTO dbo.Eval 
				(Eval_Type_Eval_Id, Eval_Cours_Id, Eval_Nom, Eval_Date)
				VALUES
				(2, 1, 'Eval nationale de mathématiques 1er semestre', '12/12/2021');
				
			END	

		IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Notes'))
			BEGIN
				--Create table of Notes
				CREATE TABLE dbo.Notes
				(
					Notes_Id INT IDENTITY(1,1) NOT NULL,		--AutoIncrément
					Notes_Eval_Id INT NOT NULL,
					Notes_Users_Id INT NOT NULL,
					Notes_Value DECIMAL(3,1) DEFAULT 0,
					Notes_Create_Date DATETIME DEFAULT GETDATE(),
					Notes_Update_Date DATETIME DEFAULT GETDATE(),
					PRIMARY KEY (Notes_Id),				--Primary Key (unique)
					CONSTRAINT FK_Note_Eval FOREIGN KEY (Notes_Eval_Id)		--Foreign key on Notes_Eval_Id
					REFERENCES Eval(Eval_Id),								--Link on table Type_Eval
					CONSTRAINT FK_Users FOREIGN KEY (Notes_Users_Id)		--Foreign key on Notes_Users_Id
					REFERENCES Users(Users_Id)								--Link on table Cours
				);
				
				--Insert into table Matieres some default record
				INSERT INTO dbo.Notes 
				(Notes_Eval_Id, Notes_Users_Id, Notes_Value)
				VALUES
				(1, 1, 15.5);
				
				INSERT INTO dbo.Notes 
				(Notes_Eval_Id, Notes_Users_Id, Notes_Value)
				VALUES
				(2, 1, 10);
				
			END
			
	COMMIT TRANSACTION
	
END TRY
BEGIN CATCH
	
	DECLARE @ErrorMessage NVARCHAR(4000);  
    DECLARE @ErrorSeverity INT;  
    DECLARE @ErrorState INT;  
  
    SELECT   
        @ErrorMessage = ERROR_MESSAGE(),  
        @ErrorSeverity = ERROR_SEVERITY(),  
        @ErrorState = ERROR_STATE();  

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
			   
	ROLLBACK TRANSACTION

END CATCH
GO